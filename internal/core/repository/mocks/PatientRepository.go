// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	models "go-hospital-server/internal/core/entity/models"

	mock "github.com/stretchr/testify/mock"

	response "go-hospital-server/internal/core/entity/response"
)

// PatientRepository is an autogenerated mock type for the PatientRepository type
type PatientRepository struct {
	mock.Mock
}

// CreatePatient provides a mock function with given fields: _a0
func (_m *PatientRepository) CreatePatient(_a0 models.Patient) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Patient) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePatientByID provides a mock function with given fields: _a0
func (_m *PatientRepository) DeletePatientByID(_a0 uint) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllPatient provides a mock function with given fields:
func (_m *PatientRepository) GetAllPatient() ([]response.Patient, error) {
	ret := _m.Called()

	var r0 []response.Patient
	if rf, ok := ret.Get(0).(func() []response.Patient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]response.Patient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPatientByID provides a mock function with given fields: _a0
func (_m *PatientRepository) GetPatientByID(_a0 uint) (response.PatientDetails, error) {
	ret := _m.Called(_a0)

	var r0 response.PatientDetails
	if rf, ok := ret.Get(0).(func(uint) response.PatientDetails); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(response.PatientDetails)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPatientByName provides a mock function with given fields: _a0
func (_m *PatientRepository) GetPatientByName(_a0 string) ([]response.Patient, error) {
	ret := _m.Called(_a0)

	var r0 []response.Patient
	if rf, ok := ret.Get(0).(func(string) []response.Patient); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]response.Patient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePatient provides a mock function with given fields: _a0
func (_m *PatientRepository) UpdatePatient(_a0 models.Patient) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Patient) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
